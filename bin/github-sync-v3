#!/usr/bin/env php
<?php

use Amp\Http\Client\HttpClientBuilder;
use Amp\Http\Client\Interceptor\AddRequestHeader;
use Amp\WebsiteTools\GitHubClient;
use Kelunik\OAuth\Providers\GitHubProvider;
use function Amp\ByteStream\getStdin;
use function Amp\ByteStream\getStdout;
use function Kelunik\OAuthCli\authenticate;

require __DIR__ . "/../vendor/autoload.php";

$stdin = getStdin();
$stdout = getStdout();

$httpClient = (new HttpClientBuilder)
    ->intercept(new AddRequestHeader('user-agent', 'amphp/website-tools'))
    ->build();

$oauthToken = getenv('AMPHP_GITHUB_SYNC_TOKEN');
if (!$oauthToken) {
    $github = new GitHubProvider(
        $httpClient,
        "http://127.0.0.1:1337/oauth",
        getenv("AMPHP_GITHUB_SYNC_APP_ID"),
        getenv("AMPHP_GITHUB_SYNC_APP_SECRET"),
        ["repo"]
    );

    $oauthToken = authenticate($github);
    print 'Set AMPHP_GITHUB_SYNC_TOKEN=' . $oauthToken . ' to avoid manual interaction in the future.' . PHP_EOL;
}

$githubClient = new GitHubClient($oauthToken, $httpClient);

$reference = $githubClient->getHead("amphp/v3.amphp.org", "main");

$stdout->write("amphp/v3.amphp.org is at {$reference}\r\n");

syncReadme(
    $githubClient,
    'amphp/amp@v3',
    'Learn about futures and cancellations as fundamental primitives for asynchronous programming.',
    'undraw/undraw_city_life.svg',
);

syncReadme(
    $githubClient,
    'amphp/byte-stream@v2',
    'Learn about stream abstractions for ordered sequences of bytes.',
    'undraw/undraw_developer_activity.svg',
);

syncReadme(
    $githubClient,
    'amphp/sync@v2',
    'Learn about synchronization primitives to organize concurrency.',
    'undraw/undraw_developer_activity.svg',
);

syncReadme(
    $githubClient,
    'amphp/cache@v2',
    'Learn about the Cache interface to serve data faster.',
    'undraw/undraw_memory_storage.svg',
);

syncReadme(
    $githubClient,
    'amphp/dns@v2',
    'Learn how to resolve hostnames to IP addresses and query the domain name system.',
    'undraw/undraw_searching.svg',
);

syncReadme(
    $githubClient,
    'amphp/file@v3',
    'Learn how to read and write files without blocking.',
    'undraw/undraw_my_files.svg',
);

syncReadme(
    $githubClient,
    'amphp/socket@v2',
    'Learn how to connect to servers and serve connections yourself.',
    'undraw/undraw_coffee.svg',
);

syncReadme(
    $githubClient,
    'amphp/windows-registry@v1',
    'Learn how to read values from the Windows Registry.',
    'undraw/undraw_welcome.svg',
);

syncReadme(
    $githubClient,
    'amphp/log@v2',
    'Learn how to write logs for your application in a non-blocking way.',
    'undraw/undraw_diary.svg',
);